{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\"));\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _apolloLinkHttp = require(\"apollo-link-http\");\n\nvar _apolloClient = require(\"apollo-client\");\n\nvar _apolloCacheInmemory = require(\"apollo-cache-inmemory\");\n\nvar _reactApollo = require(\"react-apollo\");\n\nvar _apolloHelpers = require(\"@keystonejs/apollo-helpers\");\n\nvar _jsxFileName = \"/home/truongduchuy910/apps/quangdacamera.com/app/modules.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteral2[\"default\"])([\"\\n          \", \"\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar client = new _apolloClient.ApolloClient({\n  link: new _apolloLinkHttp.HttpLink({\n    uri: \"/admin/api\"\n  }),\n  cache: new _apolloCacheInmemory.InMemoryCache()\n});\n\nmodule.exports.query = function query(props) {\n  __jsx(_reactApollo.ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(_apolloHelpers.KeystoneProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(_apolloHelpers.Query, {\n    query: (0, _graphqlTag[\"default\"])(_templateObject(), string),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children)));\n};","map":{"version":3,"sources":["/home/truongduchuy910/apps/quangdacamera.com/app/modules.js"],"names":["client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","module","exports","query","props","gql","string","children"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AACA,IAAMA,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAC9BC,EAAAA,IAAI,EAAE,IAAIC,wBAAJ,CAAa;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAb,CADwB;AAE9BC,EAAAA,KAAK,EAAE,IAAIC,kCAAJ;AAFuB,CAAjB,CAAf;;AAIAC,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,SAASA,KAAT,CAAeC,KAAf,EAAsB;AAC3C,QAAC,2BAAD;AAAgB,IAAA,MAAM,EAAEV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,+BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD;AACE,IAAA,KAAK,MAAEW,sBAAF,qBACDC,MADC,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,KAAK,CAACG,QALT,CADF,CADF;AAWD,CAZD","sourcesContent":["import gql from \"graphql-tag\";\nimport React from \"react\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"/admin/api\" }),\n  cache: new InMemoryCache()\n});\nmodule.exports.query = function query(props) {\n  <ApolloProvider client={client}>\n    <KeystoneProvider>\n      <Query\n        query={gql`\n          ${string}\n        `}\n      >\n        {props.children}\n      </Query>\n    </KeystoneProvider>\n  </ApolloProvider>;\n};\n"]},"metadata":{},"sourceType":"script"}