{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/quangdacamera.com/app/components/Products.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            query {\\n              allProducts {\\n                title\\n              }\\n            }\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\nvar client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"http://localhost:3000/admin/api\"\n  }),\n  cache: new InMemoryCache()\n});\nexport default function Products() {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(KeystoneProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Query, {\n    query: gql(_templateObject()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data;\n    return __jsx(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, _JSON$stringify(data));\n  })));\n}","map":{"version":3,"sources":["/home/truongduchuy910/apps/quangdacamera.com/app/components/Products.js"],"names":["Link","gql","React","HttpLink","ApolloClient","InMemoryCache","ApolloProvider","Query","KeystoneProvider","client","link","uri","cache","Products","data"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,KAAT,EAAgBC,gBAAhB,QAAwC,4BAAxC;AAEA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAE,IAAIP,QAAJ,CAAa;AAAEQ,IAAAA,GAAG,EAAE;AAAP,GAAb,CADwB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf;AAKA,eAAe,SAASQ,QAAT,GAAoB;AACjC,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAER,GAAF,mBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG;AAAA,QAAGa,IAAH,QAAGA,IAAH;AAAA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,gBAAeA,IAAf,CAAN,CAAd;AAAA,GATH,CADF,CADF,CADF;AAiBD","sourcesContent":["import Link from \"next/link\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"http://localhost:3000/admin/api\" }),\n  cache: new InMemoryCache()\n});\n\nexport default function Products() {\n  return (\n    <ApolloProvider client={client}>\n      <KeystoneProvider>\n        <Query\n          query={gql`\n            query {\n              allProducts {\n                title\n              }\n            }\n          `}\n        >\n          {({ data }) => <pre>{JSON.stringify(data)}</pre>}\n        </Query>\n      </KeystoneProvider>\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}