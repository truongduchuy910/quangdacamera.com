{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/quangdacamera.com/app/modules.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          \", \"\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\nvar client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"/admin/api\"\n  }),\n  cache: new InMemoryCache()\n});\n\nvar getData = function getData(props) {\n  console.log(props.query);\n\n  __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(KeystoneProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Query, {\n    query: gql(_templateObject(), props.query),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nexport default getData;","map":{"version":3,"sources":["/home/truongduchuy910/apps/quangdacamera.com/app/modules.js"],"names":["gql","React","HttpLink","ApolloClient","InMemoryCache","ApolloProvider","Query","KeystoneProvider","client","link","uri","cache","getData","props","console","log","query"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,KAAT,EAAgBC,gBAAhB,QAAwC,4BAAxC;AACA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAE,IAAIP,QAAJ,CAAa;AAAEQ,IAAAA,GAAG,EAAE;AAAP,GAAb,CADwB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf;;AAIA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;;AACA,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAER,GAAF,oBACDa,KAAK,CAACG,KADL,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAXD;;AAYA,eAAeJ,OAAf","sourcesContent":["import gql from \"graphql-tag\";\nimport React from \"react\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"/admin/api\" }),\n  cache: new InMemoryCache()\n});\nconst getData = props => {\n  console.log(props.query);\n  <ApolloProvider client={client}>\n    <KeystoneProvider>\n      <Query\n        query={gql`\n          ${props.query}\n        `}\n      ></Query>\n    </KeystoneProvider>\n  </ApolloProvider>;\n};\nexport default getData;\n"]},"metadata":{},"sourceType":"module"}